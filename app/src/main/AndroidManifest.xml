<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" />

    <application
        android:name=".ServiceApplication"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:networkSecurityConfig="@xml/network_security_config"
        android:requestLegacyExternalStorage="true"
        android:requestRawExternalStorageAccess="true"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.ScrutinizingTheService"
        android:usesCleartextTraffic="true"
        tools:targetApi="31">
        <activity
            android:name=".v2.AudioPlayerActivity"
            android:exported="false"
            android:label="@string/title_activity_audio_player"
            android:theme="@style/Theme.ScrutinizingTheService" />
        <activity
            android:name=".ui.music.MusicPlayerActivity"
            android:exported="false">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
        <activity
            android:name=".ui.NotificationActivity"
            android:exported="false">
            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>

        <service
            android:name=".services.SmartServices"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name=".services.RussianService"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name=".services.RussianIntentService"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name=".services.MusicPlayerService"
            android:stopWithTask="true" />
        <service
            android:name=".v2.media3.AudioPlayerService"
            android:exported="true"
            android:foregroundServiceType="mediaPlayback">
            <intent-filter>
                <action android:name="androidx.media3.session.MediaSessionService" />
            </intent-filter>
        </service>

        <receiver
            android:name="androidx.media3.session.MediaButtonReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <receiver
            android:name=".broadcastReceivers.MediaBroadcastReceiver"
            android:exported="false">
            <intent-filter>
                <action android:name="EMITTER_PLAY" />
                <action android:name="EMITTER_PAUSE" />
                <action android:name="EMITTER_NEXT" />
                <action android:name="EMITTER_PREVIOUS" />
            </intent-filter>
        </receiver>
        <receiver
            android:name=".services.MusicPlayerService$MusicPlayerListener"
            android:exported="false">
            <intent-filter>
                <action android:name="RECEIVER_PLAY" />
            </intent-filter>
            <intent-filter>
                <action android:name="RECEIVER_PAUSE" />
            </intent-filter>
            <intent-filter>
                <action android:name="RECEIVER_NEXT" />
            </intent-filter>
            <intent-filter>
                <action android:name="RECEIVER_PAUSE" />
            </intent-filter>
            <intent-filter>
                <action android:name="RECEIVER_FAST_FORWARD" />
            </intent-filter>
            <intent-filter>
                <action android:name="RECEIVER_REWIND" />
            </intent-filter>
        </receiver>

        <activity
            android:name=".ui.MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>

            <meta-data
                android:name="android.app.lib_name"
                android:value="" />
        </activity>
<!--
        Register receiver dynamically for api level 26 and above because static registration wont work.
        For api 25 and below both will work.

        Not required because we can dynamically register listeners
        <receiver
            android:name=".v2.receiver.ConnectionReceiver"
            android:exported="false">
            &lt;!&ndash;dash;&gt;
            exported = false means this will be used within the application only
            &lt;!&ndash;dash;&gt;
            <intent-filter>
                <action android:name="android.net.wifi.STATE_CHANGE" />
            </intent-filter>
        </receiver>
-->
    </application>

</manifest>